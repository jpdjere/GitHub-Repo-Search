// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <HashRouter>
        <div>
                <Route
                        component={[Function]}
                        path="/"
                />
                <div
                        className="search__searchBarContainer"
                >
                        <withRouter(Connect(ReduxForm)) />
                </div>
                <Switch>
                        <Route
                                component={[Function]}
                                exact={true}
                                name="Search"
                                path="/"
                        />
                        <Route
                                component={[Function]}
                                exact={true}
                                name="Top Contributors"
                                path="/top/:owner/:repo"
                        />
                </Switch>
        </div>
</HashRouter>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div>
          <Route
                    component={[Function]}
                    path="/"
          />
          <div
                    className="search__searchBarContainer"
          >
                    <withRouter(Connect(ReduxForm)) />
          </div>
          <Switch>
                    <Route
                              component={[Function]}
                              exact={true}
                              name="Search"
                              path="/"
                    />
                    <Route
                              component={[Function]}
                              exact={true}
                              name="Top Contributors"
                              path="/top/:owner/:repo"
                    />
          </Switch>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Route
              component={[Function]}
              path="/"
/>,
            <div
              className="search__searchBarContainer"
>
              <withRouter(Connect(ReduxForm)) />
</div>,
            <Switch>
              <Route
                            component={[Function]}
                            exact={true}
                            name="Search"
                            path="/"
              />
              <Route
                            component={[Function]}
                            exact={true}
                            name="Top Contributors"
                            path="/top/:owner/:repo"
              />
</Switch>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <withRouter(Connect(ReduxForm)) />,
              "className": "search__searchBarContainer",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Route
                  component={[Function]}
                  exact={true}
                  name="Search"
                  path="/"
/>,
                <Route
                  component={[Function]}
                  exact={true}
                  name="Top Contributors"
                  path="/top/:owner/:repo"
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "name": "Search",
                  "path": "/",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "name": "Top Contributors",
                  "path": "/top/:owner/:repo",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <HashRouter>
          <div>
                    <Route
                              component={[Function]}
                              path="/"
                    />
                    <div
                              className="search__searchBarContainer"
                    >
                              <withRouter(Connect(ReduxForm)) />
                    </div>
                    <Switch>
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        name="Search"
                                        path="/"
                              />
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        name="Top Contributors"
                                        path="/top/:owner/:repo"
                              />
                    </Switch>
          </div>
</HashRouter>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div>
            <Route
                        component={[Function]}
                        path="/"
            />
            <div
                        className="search__searchBarContainer"
            >
                        <withRouter(Connect(ReduxForm)) />
            </div>
            <Switch>
                        <Route
                                    component={[Function]}
                                    exact={true}
                                    name="Search"
                                    path="/"
                        />
                        <Route
                                    component={[Function]}
                                    exact={true}
                                    name="Top Contributors"
                                    path="/top/:owner/:repo"
                        />
            </Switch>
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Route
                component={[Function]}
                path="/"
/>,
              <div
                className="search__searchBarContainer"
>
                <withRouter(Connect(ReduxForm)) />
</div>,
              <Switch>
                <Route
                                component={[Function]}
                                exact={true}
                                name="Search"
                                path="/"
                />
                <Route
                                component={[Function]}
                                exact={true}
                                name="Top Contributors"
                                path="/top/:owner/:repo"
                />
</Switch>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <withRouter(Connect(ReduxForm)) />,
                "className": "search__searchBarContainer",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    name="Search"
                    path="/"
/>,
                  <Route
                    component={[Function]}
                    exact={true}
                    name="Top Contributors"
                    path="/top/:owner/:repo"
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "name": "Search",
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "name": "Top Contributors",
                    "path": "/top/:owner/:repo",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
